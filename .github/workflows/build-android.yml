name: build-android

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-android: # job の名前  [job = step のまとまり]

    runs-on: ubuntu-latest # ubuntu 環境でやっていく

    steps:
      # チェックアウト
      - name: Checks-out my repository
        uses: actions/checkout@v2

      # Flutter のインストール clone がはやい
      - name: Install Flutter
        run: git clone https://github.com/flutter/flutter.git

      # PATH を通す
      - name: Add path
        run: echo "$(pwd)/flutter/bin" >> $GITHUB_PATH

      # パッケージのダウンロード
      - name: Download Flutter packages
        run: flutter pub get

      # apk ファイルのビルド
      - name: Build Android
        run: flutter build apk

      # リリースの作成
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # apk ファイルをリリースにアップロード
      - name: Upload Release Asset
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/app/outputs/flutter-apk/app-release.apk
          asset_name: mochmatch_${{  github.ref }}.apk
          asset_content_type: application/zip

      # Secrets からrelease.jks を生成
      # - name: Create release.jks
      #   run: echo -n ${{ secrets.ANDROID_KEY_JKS }} | base64 -d > android/release.jks # -n で改行を消している

      # Secrets から service-account-ke.json を生成
      # - name: Create release.jks
      #   run: echo -n ${{ secrets.SERVICE_ACCOUNT_KEY_JSON }} | base64 -d > android/service-account-ke.json

      # Secrets から key.properties を生成
      # key.properties には各種シークレットな文字列なり file name なりを渡している
      # - name: Create key.properties
      # # > android/key.properties で 上書き
      # # >> android/key.properties で　追加
      #   run: |
      #     echo 'storeFile=release.jks' > android/key.properties
      #     echo 'serviceAccountFile=service-account-ke.json' >> android/key.properties
      #     echo 'storePassword=${{ secrets.ANDROID_STORE_PASSWORD }}' >> android/key.properties
      #     echo 'keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}' >> android/key.properties
      #     echo 'keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}' >> android/key.properties

      # App Bundle を生成
      # - name: Building Android AppBundle
      #   run: flutter build appbundle --build-number ${GITHUB_RUN_NUMBER} # build-number には run_number を渡している
      #   # ToDo: version-number や build-number は外部ファイルを参照するようにしたい

      # gradle-play-publisher で アップロード
      # https://github.com/Triple-T/gradle-play-publisher この外部パッケージを活用している
      # - name: Upload to GooglePlayStore
      #   run: ./gradlew publishReleaseBundle
      #   working-directory: ./android